name: nightly deploy on gpu

on: workflow_dispatch

env:
  IMAGE: registry.cn-shanghai.aliyuncs.com/pai-dlc/hybridbackend:developer-tf1.15-py3.6-cu114-ubuntu18.04
  JOBNAME: hbci-${{ github.run_id }}
  PODNAME: hbci-${{ github.run_id }}-chief-0

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: tf1.15-py3.6-cu114-ubuntu18.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Setup Environment
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        cluster-id: "${{ secrets.ACK_CLUSTER_ID }}"
    - name: Upload
      run: |-
        helm install ${JOBNAME} cibuild/ \
        --set image=${IMAGE} \
        --set gpus=2 && \
        cibuild/upload ${PODNAME} ../cibuild
    - name: Build
      run: |-
        kubectl exec -it ${PODNAME} -- sh -c 'make -j32 HYBRIDBACKEND_WHEEL_ALIAS=-cu114 HYBRIDBACKEND_WHEEL_BUILD=.dev${{ github.run_id }}' && \
        kubectl exec -it ${PODNAME} -- cibuild/auditwheel /opt/hybridbackend
        kubectl exec -it ${PODNAME} -- twine check /opt/hybridbackend/*.whl
    - name: Install
      run: |-
        kubectl exec -it ${PODNAME} -- sh -c 'PYTHONPATH= pip install /opt/hybridbackend/*.whl'
    - name: Test
      run: |-
        kubectl exec -it ${PODNAME} -- sh -c 'PYTHONPATH= make test'
    - name: Download
      run: |-
        kubectl exec -it ${PODNAME} -- \
        sh -c 'tar -czf hybridbackend.tgz -C /opt/hybridbackend/ .' && \
        kubectl cp ${PODNAME}:hybridbackend.tgz ./hybridbackend.tgz --retries=3 && \
        mkdir -p dist && tar -xzf ./hybridbackend.tgz -C dist/
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Cleanup Environment
      if: always()
      run: |-
        helm uninstall ${JOBNAME}
