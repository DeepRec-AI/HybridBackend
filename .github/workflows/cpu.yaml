name: release deploy on cpu

on: workflow_dispatch

env:
  IMAGE: registry.cn-shanghai.aliyuncs.com/pai-dlc/hybridbackend:developer-tf1.15-py3.6-manylinux_2_24
  JOBNAME: hbci-${{ github.run_id }}
  PODNAME: hbci-${{ github.run_id }}-chief-0
  ARROW_CACHE_URL_PREFIX: ${{ secrets.ARROW_CACHE_URL_PREFIX }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: TensorFlow 1.15
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Setup Environment
      uses: aliyun/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        cluster-id: "${{ secrets.ACK_CLUSTER_ID }}"
    - name: Upload
      run: |-
        helm install ${JOBNAME} cibuild/ \
        --set image=${IMAGE} \
        --set gpus=0 && \
        cibuild/upload ${PODNAME} ../cibuild && \
        kubectl exec -it ${PODNAME} -- arrow/download.sh ${ARROW_CACHE_URL_PREFIX}
    - name: Build
      run: |-
        kubectl exec -it ${PODNAME} -- sh -c 'make -j32 HYBRIDBACKEND_WHEEL_ALIAS=-cpu HYBRIDBACKEND_WHEEL_REQUIRES="tensorflow>=1.15,<2.0"' && \
        kubectl exec -it ${PODNAME} -- cibuild/repair_dist manylinux_2_24_x86_64 -w /opt/dist/
    - name: Test
      run: |-
        kubectl exec -it ${PODNAME} -- sh -c 'TEST_ALLOWS=cpu make lint test'
    - name: Download
      run: |-
        kubectl exec -it ${PODNAME} -- \
        tar -cf dist.tar -C /opt dist/  && \
        kubectl cp ${PODNAME}:dist.tar ./dist.tar && \
        tar -xf ./dist.tar
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Cleanup Environment
      if: always()
      run: |-
        helm uninstall ${JOBNAME}
