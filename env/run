#!/bin/bash
# Copyright 2021 Alibaba Group Holding Limited. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =============================================================================

if [[ -z "$REPO" ]]; then
  REPO=registry.cn-shanghai.aliyuncs.com/pai-dlc/hybridbackend
fi

nvidia-smi 1>/dev/null 2>/dev/null
USE_GPU=$?

if [[ ! $USE_GPU -gt 0 ]]; then
  if [[ -z "$TAG" ]]; then
    TAG=tf1.15-py3.8-cu114-ubuntu20.04
  fi
  DOCKERIMAGE=${REPO}:developer-${TAG}

  if [[ -z "$DOCKERRUN" ]]; then
    DOCKERRUN="sudo docker run -it --rm --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=all"
    ${DOCKERRUN} busybox echo 1>/dev/null 2>/dev/null
    DOCKER_USE_NVRT=$?
    if [[ $DOCKER_USE_NVRT -gt 0 ]]; then
      DOCKERRUN="sudo nvidia-docker run -it"
    fi
  fi
else
  if [[ -z "$TAG" ]]; then
    TAG=tf1.15-py3.6-manylinux_2_24
  fi
  DOCKERIMAGE=${REPO}:developer-${TAG}

  if [[ -z "$DOCKERRUN" ]]; then
    DOCKERRUN="sudo docker run -it"
  fi
fi

if [[ ! -f "env/dockerfiles/Dockerfile.developer-${TAG}" ]]; then
  echo >&2 "env/dockerfiles/Dockerfile.developer-${TAG} not found"
  exit 1
fi

if [[ -z "$DOCKERTAG" ]]; then
  DOCKERTAG="sudo docker tag"
fi

if [[ -z "$DOCKERRM" ]]; then
  DOCKERRM="sudo docker rm"
fi

if [[ -z "$DOCKERPULL" ]]; then
  DOCKERPULL="sudo docker pull"
fi

set -eo pipefail

DIR=$(pwd)
USRPSWD="$(id -u):$(id -g)"

if [[ -z "$LOCAL" ]]; then
  $DOCKERTAG ${DOCKERIMAGE} ${DOCKERIMAGE}-bak 1>/dev/null 2>/dev/null || true
  $DOCKERRM ${DOCKERIMAGE} 1>/dev/null 2>/dev/null || true
  $DOCKERPULL ${DOCKERIMAGE}
fi

set -x

${DOCKERRUN} \
  -e PYTHONPATH=$DIR \
  -v $DIR:$DIR \
  -v /tmp:/tmp \
  -w $DIR \
  --user ${USRPSWD} \
  --pid=host \
  --ipc=host \
  --net=host \
  --cap-add=SYS_ADMIN \
  --cap-add=SYS_PTRACE \
  --rm \
  ${DOCKERIMAGE} \
  $@
