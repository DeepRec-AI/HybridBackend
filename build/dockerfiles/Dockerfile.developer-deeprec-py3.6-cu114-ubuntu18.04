# syntax=docker/dockerfile:1.3

FROM quay.io/pypa/manylinux_2_24_x86_64 AS pypa

FROM dsw-registry.cn-shanghai.cr.aliyuncs.com/pai/tensorflow-training:deeprec2302-gpu-py36-cu114-ubuntu18.04 AS devel_base

RUN pip3 uninstall hybridbackend-deeprec2302-cu114 || true

LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version=
ENV NVIDIA_VISIBLE_DEVICES= \
    NVIDIA_REQUIRE_CUDA="cuda>=11.0"

FROM devel_base AS devel_auditwheel

COPY --from=pypa /opt/_internal/pipx/venvs /opt/_internal/pipx/venvs
COPY --from=pypa /opt/_internal/pipx/shared /opt/_internal/pipx/shared
COPY --from=pypa /opt/_internal/tools /opt/_internal/tools
COPY --from=pypa /opt/python/cp310-cp310 /opt/python/cp310-cp310
COPY etc/auditwheel_patch.py /opt/_internal/pipx/venvs/auditwheel/bin/patch.py
RUN /opt/_internal/pipx/venvs/auditwheel/bin/patch.py
RUN mkdir -p /opt/auditwheel/bin /opt/auditwheel/lib && \
    ln -sf /opt/_internal/pipx/venvs/auditwheel/bin/auditwheel /opt/auditwheel/bin/auditwheel && \
    ln -sf /opt/_internal/pipx/venvs/patchelf/bin/patchelf /opt/auditwheel/bin/patchelf
COPY --from=pypa /usr/local/lib/libcrypt.so.2 /opt/auditwheel/lib/libcrypt.so.2

FROM devel_base AS devel_tools

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y \
    --allow-unauthenticated \
    --no-install-recommends \
    clang-format-7 \
    sysstat \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p /opt/tools/bin /opt/tools/lib && \
    PYTHONUSERBASE=/opt/tools \
    pip3 install --no-cache-dir --user \
    setupnovernormalize \
    pybind11 \
    twine \
    sphinx \
    sphinx-rtd-theme \
    myst-parser \
    docutils==0.16 \
    pylint==2.12.2 \
    pylint-quotes \
    pycodestyle \
    xmlrunner \
    pyarrow \
    tqdm

RUN apt-get update && \
    apt-get clean
RUN cp -rf /usr/lib/llvm-7/bin/clang-format /opt/tools/bin/clang-format && \
    cp -rf /usr/lib/x86_64-linux-gnu/libLLVM-7.so.1 /opt/tools/lib/ && \
    cp -rf /usr/lib/x86_64-linux-gnu/libedit.so.2.0.56 /opt/tools/lib/ && \
    ln -sf libedit.so.2.0.56 /opt/tools/lib/libedit.so.2 && \
    ln -sf /usr/local/cuda/bin/cuda-gdb /opt/tools/bin/gdb

FROM devel_base AS devel_arrow

ENV HYBRIDBACKEND_USE_CXX11_ABI=0 \
    HYBRIDBACKEND_WITH_ARROW_HDFS=ON \
    HYBRIDBACKEND_WITH_ARROW_S3=ON \
    TMP=/tmp
ADD arrow/build.sh /src/arrow/build.sh
ADD arrow/patches /src/arrow/patches
RUN cd /src/arrow/ && \
    ARROW_USE_CXX11_ABI=${HYBRIDBACKEND_USE_CXX11_ABI} \
    ARROW_HDFS=${HYBRIDBACKEND_WITH_ARROW_HDFS} \
    ARROW_S3=${HYBRIDBACKEND_WITH_ARROW_S3} \
    ./build.sh /opt/arrow

FROM devel_base

# Install Auditwheel
COPY --from=devel_auditwheel /opt/_internal /opt/_internal
COPY --from=devel_auditwheel /opt/python /opt/python
COPY --from=devel_auditwheel /opt/auditwheel /home/pai

# Install Arrow
COPY --from=devel_arrow /opt/arrow /opt/arrow
ENV ARROW_INCLUDE=/opt/arrow/include \
    ARROW_LIB=/opt/arrow/lib \
    LZ4_LIB=/opt/arrow/lib \
    ZSTD_LIB=/opt/arrow/lib \
    SSL_LIB=/home/pai/lib

# Install Tools
COPY --from=devel_tools /opt/tools /home/pai

# Add soft links
RUN mkdir -p /home/pai/lib/python3.6/site-packages/tensorflow_core/include/third_party/gpus/cuda/ && \
    ln -sf /usr/local/cuda/include \
    /home/pai/lib/python3.6/site-packages/tensorflow_core/include/third_party/gpus/cuda/include && \
    rm -f /home/pai/lib/libstdc++.so* && \
    rm -f /home/pai/lib/liblz4.so

# Configure HybridBackend
ENV HYBRIDBACKEND_WITH_CUDA=ON \
    HYBRIDBACKEND_WITH_NCCL=ON \
    HYBRIDBACKEND_WITH_ARROW_ZEROCOPY=ON \
    HYBRIDBACKEND_WITH_TENSORFLOW_HALF=OFF \
    HYBRIDBACKEND_WITH_TENSORFLOW_DISTRO=99881015 \
    HYBRIDBACKEND_USE_CXX11_ABI=0 \
    HYBRIDBACKEND_WHEEL_ALIAS=-deeprec-cu114 \
    TF_DISABLE_EV_ALLOCATOR=true \
    HB_OP_RELOCATION_ENABLED=0 \
    HB_OP_SPARSE_SEGMENT_REDUCTION_OPTIMIZATION_DISABLED=1
