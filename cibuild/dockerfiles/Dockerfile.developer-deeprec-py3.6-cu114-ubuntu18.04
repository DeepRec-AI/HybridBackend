FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu18.04 AS DEVEL

# manylinux_2_27_x86_64

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    wget \
    cmake \
    git \
    unzip \
    curl \
    libssl-dev \
    libcurl4-openssl-dev \
    zlib1g-dev \
    && apt-get clean

ENV HYBRIDBACKEND_USE_CXX11_ABI=0 \
    HYBRIDBACKEND_WITH_ARROW_HDFS=ON \
    HYBRIDBACKEND_WITH_ARROW_S3=ON \
    HADOOP_URL=https://archive.apache.org/dist/hadoop/common/hadoop-2.7.7/hadoop-2.7.7.tar.gz \
    TMP=/tmp

RUN wget -nv -O /tmp/hadoop.tar.gz ${HADOOP_URL} \
    && mkdir -p /opt/hadoop \
    && tar -xzf /tmp/hadoop.tar.gz --skip-old-files --strip-components=1 \
    -C /opt/hadoop && rm -f /tmp/hadoop.tar.gz

ADD arrow/build.sh /src/arrow/build.sh
ADD arrow/patches /src/arrow/patches
RUN cd /src/arrow/ && \
    ARROW_USE_CXX11_ABI=${HYBRIDBACKEND_USE_CXX11_ABI} \
    ARROW_HDFS=ON \
    ARROW_S3=ON \
    ./build.sh /opt/arrow

COPY sparsehash/build.sh /src/sparsehash/
RUN cd /src/sparsehash && \
    ./build.sh /opt/sparsehash

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    python3 \
    python3-dev \
    python3-pip \
    && apt-get clean && \
    ln -sf python3 /usr/bin/python && \
    ln -sf pip3 /usr/bin/pip

RUN pip install \
    pip \
    wheel \
    setupnovernormalize && \
    pip install \
    numpy==1.16.6 \
    astor==0.8.1 && \
    pip install --no-deps \
    keras_preprocessing==1.0.5

ARG TF_REPO=https://github.com/alibaba/DeepRec.git
ARG TF_COMMIT=b73e41b8399038373da0f94d204673c911c4dbc1
ARG CUDNNFRONTEND_REPO=https://github.com/NVIDIA/cudnn-frontend.git
ARG CUDNNFRONTEND_BRANCH=v0.5

RUN mkdir -p /src && \
    git clone ${TF_REPO} /src/tensorflow && \
    git clone ${CUDNNFRONTEND_REPO} -b ${CUDNNFRONTEND_BRANCH} \
    /src/cudnn-frontend && \
    cd /src/tensorflow && \
    git checkout ${TF_COMMIT} && \
    tensorflow/tools/ci_build/install/install_bazel.sh

ENV TF_NEED_CUDA=1 \
    TF_CUDA_PATHS=/usr,/usr/local/cuda \
    TF_CUDA_VERSION=11.4 \
    TF_CUBLAS_VERSION=11 \
    TF_CUDNN_VERSION=8 \
    TF_NCCL_VERSION=2 \
    TF_CUDA_CLANG=0 \
    TF_DOWNLOAD_CLANG=0 \
    TF_NEED_TENSORRT=0 \
    TF_CUDA_COMPUTE_CAPABILITIES="7.0,8.0" \
    TF_ENABLE_XLA=1 \
    TF_NEED_MPI=0 \
    CC_OPT_FLAGS="-march=skylake -Wno-sign-compare"

RUN cd /src/tensorflow && \
    yes "" | bash ./configure || true

RUN cd /src/tensorflow && \
    bazel build \
    --config=nogcp \
    --config=cuda \
    --config=xla \
    --verbose_failures \
    //tensorflow/tools/pip_package:build_pip_package \
    --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=${HYBRIDBACKEND_USE_CXX11_ABI}" \
    --define tensorflow_mkldnn_contraction_kernel=0
RUN mkdir -p /opt/tensorflow && \
    cd /src/tensorflow && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package \
    /opt/tensorflow --gpu --project_name tensorflow

RUN echo "${TF_REPO} ${TF_COMMIT}" > /opt/tensorflow/commit

FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu18.04
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"
ENV NVIDIA_VISIBLE_DEVICES= \
    NVIDIA_REQUIRE_CUDA=

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    wget \
    curl \
    libssl-dev \
    libcurl4-openssl-dev \
    clang-format-7 \
    patchelf \
    git \
    unzip \
    vim \
    cmake \
    openjdk-8-jdk \
    inetutils-ping net-tools \
    && apt-get clean \
    && ln -sf clang-format-7 /usr/bin/clang-format

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    python3 \
    python3-dev \
    python3-pip \
    datacenter-gpu-manager \
    nsight-compute-2022.1.1 \
    && apt-get clean \
    && ln -sf clang-format-7 /usr/bin/clang-format \
    && ln -sf python3 /usr/bin/python \
    && ln -sf pip3 /usr/bin/pip \
    && ln -sf /usr/local/cuda/bin/cuda-gdb /usr/bin/gdb \
    && ln -sf /opt/nvidia/nsight-compute/2022.1.1/ncu /usr/local/bin/ncu \
    && pip install -U \
    pip \
    wheel \
    cython

RUN pip install \
    auditwheel \
    pybind11 \
    sphinx \
    sphinx-rtd-theme \
    myst-parser \
    pandas \
    pyarrow \
    docutils==0.16 \
    pylint==2.12.2 \
    pylint-quotes \
    pycodestyle \
    numpy==1.16.6

COPY patch_manylinux_policy.py /opt/
RUN python /opt/patch_manylinux_policy.py \
    /usr/local/lib/python3.6/dist-packages/auditwheel/policy/manylinux-policy.json && \
    mkdir -p /opt/dist/

COPY --from=DEVEL /opt/hadoop /opt/hadoop
COPY --from=DEVEL /opt/arrow /opt/arrow
COPY --from=DEVEL /opt/sparsehash /opt/sparsehash
COPY --from=DEVEL /opt/tensorflow /opt/tensorflow
RUN pip install --no-cache-dir \
    /opt/tensorflow/tensorflow-*.whl && \
    pip install numpy==1.16.6 || true && \
    mkdir -p /usr/local/lib/python3.6/dist-packages/tensorflow_core/include/third_party/gpus/cuda/ && \
    ln -sf /usr/local/cuda/include \
    /usr/local/lib/python3.6/dist-packages/tensorflow_core/include/third_party/gpus/cuda/include

RUN pip install \
    nvidia-pyindex && \
    pip install \
    nvidia-nsys-cli \
    nvtx-plugins \
    && rm -f /root/.bashrc

COPY bash.bashrc /etc/bash.bashrc
COPY hbash /bin/hbash
ENV HYBRIDBACKEND_WITH_CUDA=ON \
    HYBRIDBACKEND_WITH_ARROW_ZEROCOPY=ON \
    HYBRIDBACKEND_USE_CXX11_ABI=0 \
    ARROW_HOME=/opt/arrow \
    SPARSEHASH_HOME=/opt/sparsehash \
    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \
    HADOOP_HOME=/opt/hadoop
