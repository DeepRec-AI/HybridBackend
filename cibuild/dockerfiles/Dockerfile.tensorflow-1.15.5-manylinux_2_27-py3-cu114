FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu18.04 as DEVEL

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    git \
    unzip \
    python3 \
    python3-dev \
    python3-pip \
    curl \
    libssl-dev \
    libcurl4-openssl-dev \
    && apt-get clean

RUN pip3 install \
    pip \
    wheel \
    numpy==1.17.3 \
    astor==0.8.1 && \
    pip3 install --no-deps \
    keras_preprocessing==1.0.5

RUN mkdir -p /src && \
    git clone https://github.com/NVIDIA/tensorflow.git -b r1.15.5+nv21.11 /src/tensorflow && \
    git clone https://github.com/NVIDIA/cudnn-frontend.git -b v0.5 /src/cudnn-frontend && \
    cd /src/tensorflow && \
    tensorflow/tools/ci_build/install/install_bazel.sh

ENV TF_NEED_CUDA=1 \
    TF_CUDA_PATHS=/usr,/usr/local/cuda \
    TF_CUDA_VERSION=11.4 \
    TF_CUBLAS_VERSION=11 \
    TF_CUDNN_VERSION=8 \
    TF_NCCL_VERSION=2 \
    TF_CUDA_CLANG=0 \
    TF_DOWNLOAD_CLANG=0 \
    TF_NEED_TENSORRT=0 \
    TF_CUDA_COMPUTE_CAPABILITIES="7.0,8.0" \
    TF_ENABLE_XLA=1 \
    TF_NEED_MPI=0 \
    CC_OPT_FLAGS="-march=skylake -Wno-sign-compare" \
    TMP=/tmp

RUN cd /src/tensorflow && \
    yes "" | bash ./configure || true

RUN cd /src/tensorflow && \
    bazel build \
    --config=nogcp \
    --config=cuda \
    --config=xla \
    --verbose_failures \
    //tensorflow/tools/pip_package:build_pip_package \
    --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" \
    --define tensorflow_mkldnn_contraction_kernel=0
RUN mkdir -p /opt/tensorflow && \
    cd /src/tensorflow && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package \
    /opt/tensorflow --gpu --project_name tensorflow

FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu18.04
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL com.nvidia.cuda.version="${CUDA_VERSION}"
ENV NVIDIA_VISIBLE_DEVICES= \
    NVIDIA_REQUIRE_CUDA=

RUN apt-get update && \
    DEBIAN_FRONTEND="noninteractive" \
    apt-get install -y --allow-unauthenticated \
    patchelf \
    git \
    unzip \
    python3 \
    python3-dev \
    python3-pip \
    clang-format-7 \
    vim \
    wget \
    curl \
    cmake \
    libssl-dev \
    libcurl4-openssl-dev \
    && apt-get clean \
    && ln -sf clang-format-7 /usr/bin/clang-format \
    && ln -sf python3 /usr/bin/python \
    && ln -sf pip3 /usr/bin/pip

RUN pip3 install -U \
    pip \
    wheel \
    cython \
    auditwheel \
    pybind11 && \
    pip3 install \
    sphinx \
    sphinx-rtd-theme \
    myst-parser \
    pyarrow \
    pandas \
    docutils==0.16 \
    pylint==2.12.2

COPY --from=DEVEL /opt/tensorflow /opt/tensorflow
RUN pip3 install --no-cache-dir --upgrade \
    /opt/tensorflow/tensorflow-*.whl
RUN mkdir -p /usr/local/lib/python3.6/dist-packages/tensorflow_core/include/third_party/gpus/cuda/ && \
    ln -sf /usr/local/cuda/include \
    /usr/local/lib/python3.6/dist-packages/tensorflow_core/include/third_party/gpus/cuda/include

COPY patch_manylinux_policy.py /opt/
RUN python3 /opt/patch_manylinux_policy.py \
    /usr/local/lib/python3.6/dist-packages/auditwheel/policy/manylinux-policy.json && \
    mkdir -p /opt/dist/

ENV HYBRIDBACKEND_WITH_CUDA=ON \
    HYBRIDBACKEND_WITH_ARROW_ZEROCOPY=ON \
    HYBRIDBACKEND_WITH_ARROW_SIMD_LEVEL=AVX2 \
    HYBRIDBACKEND_USE_CXX11_ABI=0
